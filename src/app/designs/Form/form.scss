@import 'styles/_vars.scss';
@import 'app/designs/Form/inputPassword.scss';

.form {
  /* Form Section rendering  */
  &--section {
    /* Flow rendering */
    @include flexFlow($flx-cross: center);
    /* size rendering param */
    @include sizing(0, $form--margin, $form--width);
    /* Font, color, bckg */
    background-color: $global--background-color;
    color: $global--font-color;

    /* Form Section title rendering */
    &--title {
      /* Flow rendering */
      @include flexFlow();
      z-index: 1;
      /* size rendering param */
      @include sizing--hovering-title;
      /* Font, color, bckg */
      background-color: inherit;
      line-height: 1.2em;
      word-wrap: break-word;
      text-align: center;
    }
  }
  /* Form content childs rendering */
  &--content {
    /* Flow rendering */
    @include flexFlow($flx-cross: center);
    /* size rendering param */
    @include sizing($form--padding, 0, 100%, none, max-content);
    /* Border rendering */
    outline: none;
    &:invalid {
      @include bordering(
        $form--bordering-size,
        $form--bordering-color--invalid,
        $form--bordering-radius,
        $top: false,
        $bottom: false
      );
      &:focus-within {
        @include bordering(
          $form--bordering-size,
          $form--bordering-color--invalid-focused,
          $form--bordering-radius,
          $top: false,
          $bottom: false
        );
      }
    }
    &:valid {
      @include bordering(
        $form--bordering-size,
        $form--bordering-color--valid,
        $form--bordering-radius,
        $top: false,
        $bottom: false
      );
      &:focus-within {
        @include bordering(
          $form--bordering-size,
          $form--bordering-color--valid-focused,
          $form--bordering-radius,
          $top: false,
          $bottom: false
        );
      }
    }
    /* Font, color, bckg */
    background-color: inherit;
    color: inherit;
    /* Animation / Transitions rendering */
    transition: border ease-in-out 250ms;

    /* Form generic Input Field rendering */
    &--field {
      /* Flow rendering */
      @include flexFlow($flx-cross: center);
      /* size rendering param */
      @include sizing(0 0.5em 0.5em 0.5em, 0, 100%, none, max-content);
      @include margin-top--notFirstChild;
      /* Font, color, bckg */
      background-color: inherit;
      color: inherit;
      /* Border rendering */
      @include bordering(
        $input--bordering-size,
        $input--bordering-color--neutral,
        $input--bordering-radius,
        $right: false,
        $left: false
      );
      &:focus-within {
        @include bordering(
          $input--bordering-size,
          $input--bordering-color--neutral-focused,
          $input--bordering-radius,
          $right: false,
          $left: false
        );
      }
      /* Valid input field rendering case */
      &.invalid {
        @include bordering(
          $input--bordering-size,
          $input--bordering-color--invalid,
          $input--bordering-radius,
          $right: false,
          $left: false
        );
        &:focus-within {
          @include bordering(
            $input--bordering-size,
            $input--bordering-color--invalid-focused,
            $input--bordering-radius,
            $right: false,
            $left: false
          );
        }
      }
      /* Invalid input field rendering case */
      &.valid {
        @include bordering(
          $input--bordering-size,
          $input--bordering-color--valid,
          $input--bordering-radius,
          $right: false,
          $left: false
        );
        &:focus-within {
          @include bordering(
            $input--bordering-size,
            $input--bordering-color--valid-focused,
            $input--bordering-radius,
            $right: false,
            $left: false
          );
        }
      }
      /* Animation / Transitions rendering */
      @include animate-scale-onHoverNdFocus($input--animate-scale);

      /* Generic Input Label rendering */
      &--label {
        /* Flow rendering */
        @include flexFlow();
        z-index: 1;
        /* size rendering param */
        @include sizing--hovering-title(-0.75em 1.25em 0 1.25em, 0 1em 0.5em 1em);
        /* Font, color, bckg */
        text-align: center;
        text-transform: capitalize;
        font-weight: bold;
        line-height: 1em;
        word-break: keep-all;
        background-color: inherit;
      }
      /* Generic Input Box rendering */
      &--box {
        /* Flow rendering */
        @include flexFlow(row, $flx-cross: center);
        /* size rendering param */
        @include sizing(0, 0, 100%, none, max-content);
        /* Font, color, bckg */
        background-color: inherit;
        color: inherit;

        /* Sub elements */
        &--state {
          /* Displaying part */
          @include flexFlow();
          /* size rendering param */
          @include sizing();
          /* Font, color, bckg */
          background-color: inherit;
          color: inherit;
          /* Cursor */
          cursor: help;
          &--icon {
            @include icon(
              $input-state--icon--size,
              1,
              $input-state--stroke-neutral
            );
            &.invalid {
              stroke: $input-state--stroke-invalid;
            }
            &.valid {
              stroke: $input-state--stroke-valid;
            }
            &.neutral {
              stroke: $input-state--stroke-neutral;
            }
          }
        }
        /* Generic Input rendering */
        &--input {
          /* Flow rendering */
          @include flexFlow($flx-direction: row, $flx-grow: 1);
          /* size rendering param */
          @include sizing(0.5em 1.25em, 0 -1em 0 -1em, auto, none, max-content);
          /* Border rendering */
          border: none;
          outline: none;
          /* Font, color, bckg */
          background-color: inherit;
          color: $global--font-color;
          text-align: center;
          &::-webkit-calendar-picker-indicator {
            border-radius: 50%;
            background-color: white;
            height: 1em;
            width: 1em;
            padding: 0.25em;
            /* Cursor */
            cursor: pointer;
          }
          /* Specifics rendering for Input Password */
          &--password {
            @include inputPassword;
          }
        }
        /* Generic Input option (boxed right side element) */
        &--input-option {
          /* Displaying part */
          @include flexFlow();
          /* size rendering param */
          @include sizing();
          /* Font, color, bckg */
          background-color: inherit;
          color: inherit;
          /* Cursor */
          cursor: pointer;
        }
      }
      /* Generic Input aside (boxed bottom element) */
      &--aside {
        /* Displaying part */
        @include flexFlow();
        /* size rendering param */
        @include sizing();
        /* Font, color, bckg */
        background-color: inherit;
        color: inherit;
        /* Cursor */
        cursor: pointer;
      }
      /* Generic Input tool-tips popup (same level and inside Field, with z-index constraint) */
      &--tool-tips-box {
        /* Displaying part */
        display: block;
        position: relative;
        width: 100%;
        /* Sub element */
        &--content {
          @include tool-tips(
            $global--bordering-color,
            $global--background-color,
            $global--font-color
          );
        }
      }
    }
  }
}
