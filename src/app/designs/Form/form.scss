@import 'styles/_vars.scss';
.form {
  &--section {
    /* Flow rendering */
    @include flexFlow($flx-cross: center);
    /* size rendering param */
    @include sizing(0.75em, 0, min-content);
    /* Font, color, bckg */
    background-color: white;
    /* Sub elements */
    &--title {
      /* Flow rendering */
      @include flexFlow();
      z-index: 1;
      /* size rendering param */
      @include sizing(0 1em, 0 0 -0.5em 0);
      /* Font, color, bckg */
      background-color: inherit;
      line-height: 1.2em;
      word-wrap: break-word;
      text-align: center;
    }
  }
  /* Sub elements */
  &--content {
    /* Flow rendering */
    @include flexFlow($flx-cross: center);
    /* size rendering param */
    @include sizing(1.5em, 0, 100%, none, max-content);
    /* Border rendering */
    outline: none;
    &:invalid {
      @include bordering(
        $form--bordering-size,
        $form--bordering-color--invalid,
        $form--bordering-radius,
        $top: false,
        $bottom: false
      );
      &:focus-within {
        @include bordering(
          $form--bordering-size,
          $form--bordering-color--invalid-focused,
          $form--bordering-radius,
          $top: false,
          $bottom: false
        );
      }
    }
    &:valid {
      @include bordering(
        $form--bordering-size,
        $form--bordering-color--valid,
        $form--bordering-radius,
        $top: false,
        $bottom: false
      );
      &:focus-within {
        @include bordering(
          $form--bordering-size,
          $form--bordering-color--valid-focused,
          $form--bordering-radius,
          $top: false,
          $bottom: false
        );
      }
    }
    /* Font, color, bckg */
    background-color: inherit;
    /* Animation / Transitions rendering */
    transition: border ease-in-out 250ms;
    /* Sub elements */
    &--field {
      /* Flow rendering */
      @include flexFlow($flx-cross: center);
      /* size rendering param */
      @include sizing(0.25em, 0, 100%, none, max-content);
      @include margin-top--notFirstChild;
      /* Font, color, bckg */
      background-color: inherit;
      /* Sub elements */
      &--label {
        /* Flow rendering */
        @include flexFlow();
        z-index: 1;
        /* size rendering param */
        @include sizing(0 1em, 0 0 -0.5em 0, fit-content, none, max-content);
        /* Font, color, bckg */
        text-align: center;
        text-transform: capitalize;
        font-weight: bold;
        line-height: 1em;
        word-break: keep-all;
        background-color: inherit;
      }

      &--box {
        /* Flow rendering */
        @include flexFlow(row, $flx-cross: center);
        /* size rendering param */
        @include sizing(0.75em 0.5em, 0, 100%, none, min-content);
        /* Font, color, bckg */
        background-color: inherit;
        /* Animation / Transitions rendering */
        @include animate-scale-onHoverNdFocus($input--animate-scale);
        /* Border rendering */
        @include bordering(
          $input--bordering-size,
          $input--bordering-color--neutral,
          $input--bordering-radius,
          $right: false,
          $left: false
        );
        &:focus-within {
          @include bordering(
            $input--bordering-size,
            $input--bordering-color--neutral-focused,
            $input--bordering-radius,
            $right: false,
            $left: false
          );
        }
        &.invalid {
          @include bordering(
            $input--bordering-size,
            $input--bordering-color--invalid,
            $input--bordering-radius,
            $right: false,
            $left: false
          );
          &:focus-within {
            @include bordering(
              $input--bordering-size,
              $input--bordering-color--invalid-focused,
              $input--bordering-radius,
              $right: false,
              $left: false
            );
          }
        }
        &.valid {
          @include bordering(
            $input--bordering-size,
            $input--bordering-color--valid,
            $input--bordering-radius,
            $right: false,
            $left: false
          );
          &:focus-within {
            @include bordering(
              $input--bordering-size,
              $input--bordering-color--valid-focused,
              $input--bordering-radius,
              $right: false,
              $left: false
            );
          }
        }

        /* Sub elements */
        &--state {
          /* Displaying part */
          @include flexFlow();
          /* size rendering param */
          @include sizing();
          /* Cursor */
          cursor: help;
          &--icon {
            @include icon(1em, 1, $input-state--stroke-neutral);
            &.invalid {
              stroke: $input-state--stroke-invalid;
            }
            &.valid {
              stroke: $input-state--stroke-valid;
            }
            &.neutral {
              stroke: $input-state--stroke-neutral;
            }
          }
        }

        &--input {
          /* Flow rendering */
          @include flexFlow($flx-direction: row, $flx-grow: 1);
          /* size rendering param */
          @include sizing(0 1em, 0 0 0 -1em, auto, none, max-content);
          /* Border rendering */
          border: none;
          outline: none;
          /* Font, color, bckg */
          text-align: center;
          background-color: inherit;
        }
      }
      .password-description {
        /* Displaying part */
        @include flexFlow();
        /* size rendering param */
        @include sizing(0, 0.5em 0 0 0, 100%);
        .password-strength {
          &.bad {
            color: $global--color--invalid;
          }
          &.good {
            color: $global--color--dark;
          }
          &.strong {
            color: $global--color--valid--darker;
          }
          &.very-strong {
            color: $global--color--valid--darker;
          }
        }
      }
    }
    .tool-tips-box {
      /* Displaying part */
      display: block;
      position: relative;
      width: 100%;
      /* Sub element */
      .tool-tips {
        @include tool-tips;
      }
    }
  }
}
